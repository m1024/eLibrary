@using eLibrary.Models
@model IEnumerable<eLibrary.Models.Book>

@{
    ViewBag.Title = "Список книг";
}


<div class="col-md-10 col-md-offset-1">

    @if (HttpContext.Current.User.IsInRole("Администратор") || HttpContext.Current.User.IsInRole("Модератор"))
    {
        <a href="Create" class="btn btn-primary btn-sm">Добавить книгу</a>
    }
    <table class="table table-hover">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.SerieId)
            </th>

            @*<th>
                @Html.DisplayNameFor(model => model.Annotation)
            </th>*@

            <th>
                @Html.DisplayNameFor(model => model.GenreId)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Authors)
            </th>
            <th></th>
            <th></th>

        </tr>

        @foreach (var item in Model)
{
    <tbody style="border: 1px;">
        <tr>
            <td>
                <a href="@Url.Action("ShowBook", "Book", new {id = item.Id})">@item.Name</a>
            </td>

            <td>
                <a href="@Url.Action("ShowSerie", "Series", new { id = item.Serie.Id })">@item.Serie.Name</a>
            </td>

            <td>
                <a href="@Url.Action("Books", "Genres", new { id = item.Genre.Id })">@item.Genre.Name</a>
                @*@Html.DisplayFor(modelItem => item.Genre.Name)*@
            </td>

            <td>
                @foreach (Author c in item.Authors)
            {
                <a href="@Url.Action("ShowAuthor", "Author", new { id = c.Id })">
                    @c.Family
                    @if (c.Name != null)
                    {
                    <label>@c.Name.Remove(1).</label>
                    }
                    @if (c.Patronymic != null)
                    {
                    <label>@c.Patronymic.Remove(1).</label>
                    }
                </a>
            }

            </td>
            @*@if (HttpContext.Current.User.IsInRole("Администратор") || HttpContext.Current.User.IsInRole("Модератор")
                     || HttpContext.Current.User.IsInRole("Пользователь"))
            {
                <td>
                    @if (item.Text_fb2 != null)
                    {

                        @Html.ActionLink("Загрузить fb2", "GetFile_fb2", new { id = item.Id })

                    }
                </td>
            }*@
            @if (HttpContext.Current.User.IsInRole("Администратор") || HttpContext.Current.User.IsInRole("Модератор"))
            {
                <td>
                    @Html.ActionLink("Редактировать", "Edit", new {id = item.Id})</td>
                <td>   @Html.ActionLink("Удалить", "Delete", new { id = item.Id })
                </td>
            }
        </tr>
    </tbody>
}
    </table>
</div>
<div class="col-md-10 col-md-offset-1">

    <ul class="pagination">
        <li>@Html.ActionLink("<<", "Index", new {id  = ViewBag.page - 1})</li>
        <li>@Html.ActionLink("1", "Index", new {id = 0})</li>
        <li><a> . . . </a> </li>
        <li><a href="@Url.Action("Index", "Book", new { id = ViewBag.lastPage + 1 })">@(ViewBag.lastPage+1)</a></li>
        <li>@Html.ActionLink(">>", "Index", new {id = ViewBag.page + 1})</li>
    </ul>

    @*@Html.ActionLink("Первая", "Index", new {id = 0}, new {@class = "btn btn-default btn-sm pages"})
    @Html.ActionLink("Предыдущая", "Index", new {id = ViewBag.page - 1}, new {@class = "btn btn-default btn-sm pages"})
    @Html.ActionLink("Следующая", "Index", new {id = ViewBag.page + 1}, new {@class = "btn btn-default btn-sm pages"})
    @Html.ActionLink("Последняя", "Index", new {id = ViewBag.lastPage + 1}, new {@class = "btn btn-default btn-sm pages"})*@
</div>

