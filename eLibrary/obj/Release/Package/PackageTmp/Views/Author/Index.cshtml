@model IEnumerable<eLibrary.Models.Author>

@{
    ViewBag.Title = "Index";
}

@*<a data-toggle="modal" href="../Author/Delete/16" data-target="#myModal">Click me</a>
<a href="../Author/Delete/16" class="btn btn-primary btn-sm col-md-offset-2" data-toggle="modal" data-target="#myModal" id="btn">Удалить</a>*@
<!-- Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
            <div id="dialogContent" class="modal-content"></div>
    </div>
</div>

<script>
    $('body').on('hidden.bs.modal', '.modal', function () {
        //    $(this).removeData('bs.modal');
        location.reload();
    });
</script>


<div class="col-md-10 col-md-offset-1">

        @if (HttpContext.Current.User.IsInRole("Администратор") || HttpContext.Current.User.IsInRole("Модератор"))
        {
                @Html.ActionLink("Добавить автора", "Create",null, new { @class = "btn btn-primary btn-sm" })
        }
        <h2>Все авторы</h2>
    <table class="table table-hover">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Family)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.Image)
                </th>*@

            @*<th>
                    @Html.DisplayNameFor(model => model.Patronymic)
                </th>*@
            <th>Книги</th>
            <th></th>
            <th></th>
            <th></th>
            <th></th>
            @if (HttpContext.Current.User.IsInRole("Администратор") || HttpContext.Current.User.IsInRole("Модератор"))
            {
                <th></th>
                <th></th>
            }
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <a href="@Url.Action("ShowAuthor", "Author", new {id = item.Id})">
                        @item.Family
                        @if (item.Name != null)
                        {@item.Name.Remove(1)}
                        @if (item.Family != null)
                        {@item.Family.Remove(1)}
                    </a>
                    @*@Html.DisplayFor(modelItem => item.Family)*@
                </td>
                @*<td>
                        @if (item.Image != null)
                        {
                            @Html.Raw("<img style='height: 40px' src=\"data:image/jpeg;base64,"
                                      + Convert.ToBase64String(item.Image) + "\" />")
                        }
                    </td>*@
                @*<td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>*@



                @{
                        int k = 0;
                        foreach (var item2 in @item.Books)
                        {
                            if (k < 5)
                            {
                                <td>
                                    @if (item2.Name.Length > 20)
                                    {
                                        <a href="@Url.Action("ShowBook", "Book", new {id = item2.Id})">
                                            @item2.Name.Remove(20)...
                                        </a>
                                    }
                                    else
                                    {
                                        <a href="@Url.Action("ShowBook", "Book", new {id = item2.Id})">
                                            @item2.Name
                                        </a>
                                    }
                                </td>
                            }
                            k++;
                        }
                        for (int i = k; i < 5; i++)
                        {
                            <td></td>
                        }
                }



                @*<td>
                        @Html.DisplayFor(modelItem => item.Patronymic)
                    </td>*@

                @if (HttpContext.Current.User.IsInRole("Администратор") || HttpContext.Current.User.IsInRole("Модератор"))
                {
                    <td>
                        @Html.ActionLink("Редактировать", "Edit", new { id = item.Id })
                    </td>
                    <td>
                        @*@Html.ActionLink("Удалить", "Delete", new { id = item.Id })*@
                        <a data-toggle="modal" href="@Url.Action("Delete", "Author", new {id = item.Id})" data-target="#deleteModal">Удалить</a>
                    </td>
                }
                @*<td>
                        @Html.ActionLink("Подробнее", "ShowAuthor", new {id = item.Id})
                    </td>*@
            </tr>
        }
    </table>
</div>
<div class="col-md-10 col-md-offset-1">

    <ul class="pagination">
        <li>@Html.ActionLink("<<", "Index", new { id = ViewBag.page - 1 })</li>
        <li>@Html.ActionLink("1", "Index", new { id = 0 })</li>
        <li><a> . . . </a> </li>
        <li><a href="@Url.Action("Index", "Author", new { id = ViewBag.lastPage + 1 })">@(ViewBag.lastPage + 1)</a></li>
        <li>@Html.ActionLink(">>", "Index", new { id = ViewBag.page + 1 })</li>
    </ul>

</div>

